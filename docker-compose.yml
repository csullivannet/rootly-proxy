services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: rootly
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - proxy-network

  app:
    image: rootly-proxy:latest
    ports:
      - "8080:80" # HTTP for ACME challenges
      - "8443:443" # HTTPS for main application
      - "8444:8443" # Health check endpoint
    environment:
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/rootly?sslmode=disable"
      PEBBLE_URL: "https://pebble:14000/dir"
      HTTPS_PORT: "443"
      HTTP_PORT: "80"
      HEALTH_PORT: "8443"
    depends_on:
      postgres:
        condition: service_healthy
      pebble:
        condition: service_started
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8443/ready" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - certs_data:/app/certs
    networks:
      - proxy-network

  # Mock backend service
  backend:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8080/health" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - proxy-network

  # For integration testing with Pebble ACME server
  pebble:
    image: letsencrypt/pebble:latest
    command: pebble -config /test/config/pebble-config.json
    ports:
      - "14000:14000" # ACME directory
      - "15000:15000" # Management interface
    environment:
      PEBBLE_VA_NOSLEEP: 1
      PEBBLE_VA_ALWAYS_VALID: 1
    networks:
      - proxy-network

volumes:
  postgres_data:
  certs_data:


networks:
  proxy-network:
    driver: bridge
